---
import { Font } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import DefaultOpenGraphImage from '~assets/og-image.webp';
import * as shared from '~shared';

type OpenGraphProtocol =
  | {
      type: 'website';
      image: ImageMetadata;
    }
  | {
      type: 'article';
      image: ImageMetadata;
      article: {
        publishedTime: string;
        modifiedTime: string;
        tags: string[];
      };
    };

export interface HeadProps {
  title: string;
  description: string;
  ogp: OpenGraphProtocol;
}

export type Props = Partial<HeadProps>;

const siteName = shared.title;
const siteUrl = new URL(Astro.url.pathname, Astro.site);

const defaultProps = {
  title: siteName,
  description: shared.description,
  ogp: {
    type: 'website',
    image: DefaultOpenGraphImage,
  },
} as HeadProps;

const props = Astro.props;

const { title, description } = { ...defaultProps, ...props };
const { type, image } = { ...defaultProps.ogp, ...props.ogp };
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={siteName}
	href={new URL('rss.xml', Astro.site)}
/>

<link rel="canonical" href={siteUrl} />

<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Favicon -->

<link rel="icon" type="image/png" href="/favicon-96x96.png" sizes="96x96" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="shortcut icon" href="/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<meta name="apple-mobile-web-app-title" content="Krish Gupta" />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={Astro.url} />
<meta property="og:title" content={title} />
<meta property="og:site_name" content={siteName} />
<meta property="og:description" content={description} />

<meta property="og:image" content={new URL(image.src, Astro.url)} />
<meta property="og:image:width" content={image.width.toString()} />
<meta property="og:image:height" content={image.height.toString()} />

{Astro.props.ogp?.type == 'article' && (
  <meta property="og:article:published_time" content={Astro.props.ogp.article.publishedTime} />
  <meta property="og:article:modified_time" content={Astro.props.ogp.article.modifiedTime} />
  <meta property="og:article:author" content="Krish Gupta" />
  <meta property="og:article:author:username" content="kkrishguptaa" />
)}

{Astro.props.ogp?.type == 'article' && Astro.props.ogp.article.tags.map((tag) => (
  <meta property="og:article:tag" content={tag} />
))}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={Astro.url} />
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={new URL(image.src, Astro.url)} />
<meta name="twitter:creator" content="@kkrishguptaa" />
<meta name="twitter:site" content="@kkrishguptaa" />

<Font cssVariable='--font-mona-sans' />
<Font cssVariable='--font-fira-code' />
